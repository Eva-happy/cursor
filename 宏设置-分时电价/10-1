Sub CreateTimeOfUsePricingCharts()
    On Error Resume Next
    
    ' 获取当前工作表
    Dim wsSingle As Worksheet
    Set wsSingle = ActiveSheet
    If wsSingle Is Nothing Then
        MsgBox "无法获取当前工作表", vbExclamation
        Exit Sub
    End If
    
    ' 获取选中的地区
    Dim selectedRegion As String
    selectedRegion = wsSingle.Range("A1").Value
    If selectedRegion = "" Then
        MsgBox "请先选择地区", vbExclamation
        Exit Sub
    End If
    
    ' 获取源数据工作表
    Dim wsSource As Worksheet
    Set wsSource = ThisWorkbook.Sheets("解析结果")
    If wsSource Is Nothing Then
        MsgBox "未找到解析结果工作表", vbExclamation
        Exit Sub
    End If
    
    ' 获取最后一行
    Dim lastRow As Long
    lastRow = wsSource.Cells(wsSource.Rows.Count, "A").End(xlUp).Row
    
    ' 创建或激活分时电价时段柱状图工作表
    Dim wsChart As Worksheet
    On Error Resume Next
    Set wsChart = ThisWorkbook.Sheets("分时电价时段柱状图")
    On Error GoTo 0
    
    Application.ScreenUpdating = False
    
    If wsChart Is Nothing Then
        Set wsChart = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsChart.Name = "分时电价时段柱状图"
    Else
        wsChart.Cells.Clear
        wsChart.ChartObjects.Delete
    End If
    
    ' 创建临时工作表存储数据
    Dim wsTempData As Worksheet
    On Error Resume Next
    Set wsTempData = ThisWorkbook.Sheets("TempData")
    If wsTempData Is Nothing Then
        Set wsTempData = ThisWorkbook.Sheets.Add
        wsTempData.Name = "TempData"
    End If
    wsTempData.Visible = xlSheetVeryHidden
    On Error GoTo 0
    
    ' 定义时段高度
    Const DEEP_VALLEY_HEIGHT As Double = 0.1
    Const VALLEY_HEIGHT As Double = 0.3
    Const FLAT_HEIGHT As Double = 0.6
    Const PEAK_HEIGHT As Double = 0.9
    Const SHARP_PEAK_HEIGHT As Double = 1.2
    
    ' 循环处理12个月份
    Dim monthNum As Integer
    Dim chartTop As Long
    chartTop = 50
    
    ' 处理每个月份
    For monthNum = 1 To 12
        ' 创建数据区域在临时工作表中
        Dim dataRange As Range
        Set dataRange = wsTempData.Range(wsTempData.Cells(1, 1), wsTempData.Cells(2, 25))
        dataRange.Clear
        
        ' 填充时间标签
        Dim hour As Integer
        For hour = 0 To 23
            dataRange.Cells(1, hour + 2).Value = "'" & hour & "-" & (hour + 1)
        Next hour
        
        ' 获取该月的时段数据
        Dim timeSlotRange As Range
        Set timeSlotRange = wsSingle.Range(wsSingle.Cells(monthNum + 1, 2), wsSingle.Cells(monthNum + 1, 25))
        
        ' 填充高度数据
        Dim colIndex As Integer
        For colIndex = 1 To 24
            Select Case timeSlotRange.Cells(1, colIndex).Interior.color
                Case RGB(255, 192, 0)    ' 尖峰
                    dataRange.Cells(2, colIndex + 1).Value = SHARP_PEAK_HEIGHT
                Case RGB(255, 192, 203)   ' 高峰
                    dataRange.Cells(2, colIndex + 1).Value = PEAK_HEIGHT
                Case RGB(189, 215, 238)   ' 平段
                    dataRange.Cells(2, colIndex + 1).Value = FLAT_HEIGHT
                Case RGB(198, 239, 206)   ' 低谷
                    dataRange.Cells(2, colIndex + 1).Value = VALLEY_HEIGHT
                Case RGB(0, 112, 192)     ' 深谷
                    dataRange.Cells(2, colIndex + 1).Value = DEEP_VALLEY_HEIGHT
            End Select
        Next colIndex
        
        ' 创建柱状图
        Dim chartObj As ChartObject
        Set chartObj = wsChart.ChartObjects.Add(Left:=50, Top:=chartTop, Width:=800, Height:=300)
        
        ' 分析收益模式
        Dim profitMode As String
        profitMode = AnalyzeProfitMode(timeSlotRange)
        
        With chartObj.Chart
            ' 设置图表类型和数据源
            .ChartType = xlColumnClustered
            .SetSourceData Source:=dataRange
            
            ' 设置图表标题
            .HasTitle = True
            If profitMode <> "" Then
                If InStr(profitMode, "第二次") > 0 Then
                    ' 将第二次套利信息合并到第一行
                    Dim firstProfit As String, secondProfit As String
                    firstProfit = Left(profitMode, InStr(profitMode, vbNewLine) - 1)
                    secondProfit = Mid(profitMode, InStr(profitMode, vbNewLine) + 2)
                    .ChartTitle.text = selectedRegion & " - " & monthNum & "月分时电价时段柱状图" & vbNewLine & _
                                     firstProfit & "，" & secondProfit
                Else
                    .ChartTitle.text = selectedRegion & " - " & monthNum & "月分时电价时段柱状图" & vbNewLine & profitMode
                End If
            Else
                .ChartTitle.text = selectedRegion & " - " & monthNum & "月分时电价时段柱状图"
            End If
            
            ' 设置标题格式
            With .ChartTitle
                .Font.Size = 14  ' 第一行更大
                .Font.Bold = True
            End With
            
            ' 设置图表大小和位置
            .ChartArea.Width = 800
            .ChartArea.Height = 400
            .ChartArea.Left = 50
            .ChartArea.Top = chartTop
            
            ' 设置柱状图颜色和数据标签
            With .SeriesCollection(1)
                .Name = ""  ' 清除系列名称
                ' 设置柱子宽度（通过调整图表区域和绘图区域的比例来实现）
                .Border.Weight = xlThin
                .Border.LineStyle = xlContinuous
                
            ' 设置柱状图颜色
            
                  .Name = ""  ' 清除系列名称
            Dim i As Integer
            For i = 1 To .SeriesCollection(1).Points.Count
                  Select Case timeSlotRange.Cells(1, i).Interior.color
                    Case RGB(255, 192, 0)    ' 尖峰
                        .SeriesCollection(1).Points(i).Interior.color = RGB(255, 192, 0)
                    Case RGB(255, 192, 203)   ' 高峰
                        .SeriesCollection(1).Points(i).Interior.color = RGB(255, 192, 203)
                    Case RGB(189, 215, 238)   ' 平段
                        .SeriesCollection(1).Points(i).Interior.color = RGB(189, 215, 238)
                    Case RGB(198, 239, 206)   ' 低谷
                        .SeriesCollection(1).Points(i).Interior.color = RGB(198, 239, 206)
                    Case RGB(0, 112, 192)     ' 深谷
                        .SeriesCollection(1).Points(i).Interior.color = RGB(0, 112, 192)
         End Select
        .Points(i).HasDataLabel = False
    Next i

            ' 添加图例并设置位置
            .HasLegend = True
            With .Legend
                .Position = xlTop
                .IncludeInLayout = False
            End With
            
            ' 调整图表大小以获得更宽的柱子
            .ChartArea.Width = 800
            .ChartArea.Height = 300
            
            ' 设置图例项
            Dim legendSeries As Series
            With .SeriesCollection(1)
                .Name = "尖峰时段"
                .Interior.color = RGB(255, 192, 0)      ' 橙色
            End With
            
            Set legendSeries = .SeriesCollection.NewSeries
            With legendSeries
                .Name = "高峰时段"
                .Interior.color = RGB(255, 192, 203)    ' 粉红色
            End With
            
            Set legendSeries = .SeriesCollection.NewSeries
            With legendSeries
                .Name = "平时段"
                .Interior.color = RGB(189, 215, 238)    ' 浅蓝色
            End With
            
            Set legendSeries = .SeriesCollection.NewSeries
            With legendSeries
                .Name = "低谷时段"
                .Interior.color = RGB(198, 239, 206)    ' 浅绿色
            End With
            
            Set legendSeries = .SeriesCollection.NewSeries
            With legendSeries
                .Name = "深谷时段"
                .Interior.color = RGB(0, 112, 192)      ' 深蓝色
            End With
        End With
        
        chartTop = chartTop + 450
    Next monthNum
    
    ' 删除临时工作表
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Sheets("TempData").Delete
    On Error GoTo 0
    Application.DisplayAlerts = True
    
    ' 清除分时电价时段柱状图工作表中的所有单元格内容
    wsChart.Cells.Clear
    
    ' 调整工作表视图
    wsChart.Activate
    ActiveWindow.Zoom = 70
    
    Application.ScreenUpdating = True
    
    MsgBox "柱状图创建完成！", vbInformation
End Sub